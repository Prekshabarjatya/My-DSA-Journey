Case Study: Personal Budget Tracker
Imagine you're building a Daily Expense Tracking App.

Problem Statement
Users add their daily spendings: arr[i] = expense on day i.

You are asked:

"How many continuous periods (subarrays) had expenses summing exactly to the user's budget goal (key)?"

Given:

Daily expenses array

Target Budget (key)

Goal:

Find number of periods (subarrays) where the total expense = target budget.

Real-world Translation of Prefix Sum + Hashmap

Concept in DSA	Real-world in Budget Tracker
prefix_sum	Total expenses from Day 0 to current day
prefix_sum - key lookup	"Did we overspend earlier exactly by this much?"
HashMap	Record of total spend till every earlier day
Insert (0,1) initially	Zero spending before starting (day -1)
Real Example:
Suppose:

java
Copy
Edit
Expenses each day = [10, 2, 8, 5, 5]
Target Budget = 10
Let's track prefix sums:


Day	Daily Expense	Running Total (Prefix Sum)	prefix_sum - budget	Found Before?	Count
0	10	10	0	Yes (0 exists)	+1
1	2	12	2	No	0
2	8	20	10	Yes (10 exists)	+1
3	5	25	15	No	0
4	5	30	20	Yes (20 exists)	+1
Total Subarrays = 3
